// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!! This file is auto-generated by Reflang. !!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#include <cassert>
#include <stdexcept>
#include <string>

#include "lib/reflang.hpp"

namespace reflang
{

template <>
class Function<decltype(ns::NamespacedFunction), ns::NamespacedFunction> : public IFunction
{
	int num_args() const override
	{
		return 0;
	}

	Object Invoke(const std::vector<Object>& args) override
	{
		if (args.size() != this->num_args())
		{
			throw std::invalid_argument("count");
		}
		return Object(ns::NamespacedFunction());
	}
};


template <>
class Function<decltype(GlobalFunction), GlobalFunction> : public IFunction
{
	int num_args() const override
	{
		return 0;
	}

	Object Invoke(const std::vector<Object>& args) override
	{
		if (args.size() != this->num_args())
		{
			throw std::invalid_argument("count");
		}
		return Object(GlobalFunction());
	}
};


}  // namespace reflang
